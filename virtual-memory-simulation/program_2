lea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
lea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
push %ebx               
imul %eax, LINE         
mov %ebx, %eax          
add %eax, LINE          
push %eax               
lea %eax, puzzle
push [%eax+%ebx*4]
call printInt           
pop %eax
inc %ebx                
cmp %ebx, [%esp]        
jne lstep
add %esp, 4             
pop %ebx
pop %ebp
add %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %espadd %esp, 4
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
add %esp, 4             
call newline            
inc %ebx                
cmp %ebx, LINE          
jnz puzstep
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esplea %eax, welcome       
push %eax
call printString        
pop %eax
lea %eax, command
push %eax
call printString
pop %eax
call fillPuzzle         
call shufflePuzzle
mov %eax, 1
mov %ebx, 0
int 0x80
call clearScreen
call showPuzzle
call isFinished         
cmp %eax, 0
jne wonmsg
lea %eax, whattodo
push %eax
call printString
pop %eax
call readAndPlay
jmp turn
ea %eax, won
push %eax
call printString
pop %eax
push %ebp
mov %ebp, %esp
push %ebx
mov %ebx, 50            
rdrand %eax             
mov %edx, 0
mov %ecx, 3             
idiv %ecx               
cmp %edx, 0
je right
cmp %edx, 1
je up
cmp %edx, 2
je left
call moveUp
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 4
mov %ebx, 1
lea %ecx, clearstr
mov %edx, 7
int 0x80
pop %ebx
pop %ebp
push %ebp                       
mov %ebp, %esp                  
mov %eax, [%ebp + 8]            
push %ebx                       
mov BYTE PTR [buffer+SIZE-1], '\t'  
mov %ecx, SIZE-2                
mov %ebx, 10                    
mov %edx, 0                     
div %ebx                        
add %edx, '0'                   
mov [buffer+%ecx], %dl          
sub %ecx, 1
cmp %eax, 0
jnz loop
mov %edx, SIZE
sub %edx, %ecx          
lea %eax, buffer
add %eax, %ecx
inc %eax
mov %ecx, %eax          
mov %eax, 4
mov %ebx, 1
int 0x80
pop %ebx                
pop %ebp                
push %ebp               
mov %ebp, %esp          
push %ebx               
mov %eax, 3             
mov %ebx, 0             
lea %ecx, buffer        
mov %edx, SIZE          
int 0x80
mov %ecx, %eax
sub %ecx, 1
mov %edx, 0             
mov %ebx, 0             
mov %eax, 0             
imul %eax, 10           
mov %edx, 0
mov %dl, [buffer+%ebx]  
sub %edx, '0'           
add %eax, %edx          
add %ebx, 1
cmp %ebx, %ecx
jne nextd
pop %ebx                
pop %ebp                
push %ebp
mov %ebp, %esp
push %ebx
mov %ecx, [%esp + 12]   
push %ecx               
call strlen
mov %edx, %eax          
pop %ecx                
mov %ebx, 1
mov %eax, 4
int 0x80                
pop %ebx
pop %ebp
ush %ebp
mov %ebp, %esp
mov %eax, [%esp+8]      
mov %ecx, [%eax]        
inc %eax
and %ecx, 0xff          
cmp %ecx, 0
jne cchar               
mov %ecx, [%esp+8]      
sub %eax, %ecx          
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, '\n'
push %eax               
mov %eax, 4
mov %ebx, 1
mov %ecx, %esp          
mov %edx, 1             
int 0x80
pop %eax
pop %ebx                
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0                     
mov %edx, %eax          
inc %edx                        
mov [puzzle+%eax*4], %edx       
add %eax, 1
cmp %eax, PUZZLE_SIZE-1         
jne fstep
mov %edx, 0
mov [puzzle+%eax*4], %edx       
mov BYTE PTR [pindex], 0xF      
pop %ebp
push %ebp
mov %ebp, %esp
mov %eax, 0
mov %ecx, [puzzle+%eax*4] 
dec %ecx
cmp %ecx, %eax          
jne fexit
inc %eax                
cmp %eax, PUZZLE_SIZE-1 
jne finloop
mov %eax, 1             
pop %ebp
mov %eax, 0     
jmp end
ush %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, 0             
je upEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-LINE)], %ecx
sub %eax, LINE                          
mov [pindex], %eax        
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %eax, LINE-1        
je dowEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+LINE)]      
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+LINE)], %ecx
add %eax, LINE                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE         
mov %edx, 0
div %ecx
cmp %edx, 0             
je lefEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax-1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax-1)], %ecx
dec %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %eax, [pindex]      
mov %ecx, LINE
mov %edx, 0
div %ecx
cmp %edx, LINE-1             
je rigEnd
mov %eax, [pindex]                      
mov %ecx, [puzzle + 4*(%eax+1)]         
mov [puzzle + 4*%eax], %ecx             
mov %ecx, 0
mov [puzzle + 4*(%eax+1)], %ecx
inc %eax                          
mov [pindex], %eax        
op %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx               
mov %ebx, 0             
push %ebx
call showLine
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
mov %eax, [%esp]
and %eax, 0x000000ff
cmp %eax, 'u'
je pup
cmp %eax, 'd'
je pdown
cmp %eax, 'l'
je pleft
cmp %eax, 'r'
je pright
jmp playexit             
call moveUp
jmp playexit
call moveDown
jmp playexit
call moveLeft
jmp playexit
call moveRight
add %esp, 4jmp again
call moveRight
jmp again
call moveLeft
dec %ebx
cmp %ebx, 0
jne onemove
pop %ebx
pop %ebp
push %ebp
mov %ebp, %esp
push %ebx
mov %eax, 0
push %eax
mov %eax, 3
mov %ebx, 0
mov %ecx, %esp
mov %edx, 3
int 0x80
call exit